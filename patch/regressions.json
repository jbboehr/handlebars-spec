{
    "regressions-bug reported by @fat where lambdas weren't being properly resolved-00": {
        "data": {
            "thing": {
                "php": "function() {\n        return \"blah\";\n      }"
            },
            "hasThings": {
                "php": "function() {\n        return true;\n      }"
            }
        }
    },
    "regressions-gh-1054: should handle simple safe string responses-00": {
        "helpers": {
            "wrap": {
                "php": "function($options) {\n        return new \\Handlebars\\SafeString($options->fn());\n      }"
            }
        }
    },
    "regressions-gh-1065: sparse arrays-00": {
        "data": {
            "array": {
                "!sparsearray": true,
                "1": "foo",
                "3": "bar"
            }
        }
    },
    "regressions-gh-1093: undefined helper context-00": null,
    "regressions-gh-837: undefined values for helpers-00": {
        "helpers": {
            "str": {
                "php": "function($value) { return $value === null ? 'undefined' : (string) $value; }"
            }
        }
    },
    "regressions-gs-428: nested if else rendering-00": {
        "helpers": {
            "blk": {
                "php": "function($block) { return $block\/*['fn']*\/->fn(''); }"
            },
            "inverse": {
                "php": "function($block) { return $block\/*['inverse']*\/->inverse(''); }"
            }
        }
    },
    "regressions-gs-428: nested if else rendering-01": {
        "helpers": {
            "blk": {
                "php": "function($block) { return $block\/*['fn']*\/->fn(''); }"
            },
            "inverse": {
                "php": "function($block) { return $block\/*['inverse']*\/->inverse(''); }"
            }
        }
    }
}