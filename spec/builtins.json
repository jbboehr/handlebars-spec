[
	{
		"description": "builtin helpers - #if",
		"it": "if",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": true,
			"world": "world"
		},
		"expected": "GOODBYE cruel world!",
		"message": "if with boolean argument shows the contents when true"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if",
		"number": "01",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": "dummy",
			"world": "world"
		},
		"expected": "GOODBYE cruel world!",
		"message": "if with string argument shows the contents"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if",
		"number": "02",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": false,
			"world": "world"
		},
		"expected": "cruel world!",
		"message": "if with boolean argument does not show the contents when false"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if",
		"number": "03",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"world": "world"
		},
		"expected": "cruel world!",
		"message": "if with undefined does not show the contents"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if",
		"number": "04",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": [
				"foo"
			],
			"world": "world"
		},
		"expected": "GOODBYE cruel world!",
		"message": "if with non-empty array shows the contents"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if",
		"number": "05",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": [],
			"world": "world"
		},
		"expected": "cruel world!",
		"message": "if with empty array does not show the contents"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if",
		"number": "06",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": 0,
			"world": "world"
		},
		"expected": "cruel world!",
		"message": "if with zero does not show the contents"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if",
		"number": "07",
		"template": "{{#if goodbye includeZero=true}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": 0,
			"world": "world"
		},
		"expected": "GOODBYE cruel world!",
		"message": "if with zero does not show the contents"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if with function argument",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": {
				"!code": true,
				"javascript": "function () {\n        return true;\n      }",
				"php": "function() {\n        return true;\n      }"
			},
			"world": "world"
		},
		"expected": "GOODBYE cruel world!",
		"message": "if with function shows the contents when function returns true"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if with function argument",
		"number": "01",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": {
				"!code": true,
				"javascript": "function () {return this.world; }",
				"php": "function($scope) { return $scope['world']; }"
			},
			"world": "world"
		},
		"expected": "GOODBYE cruel world!",
		"message": "if with function shows the contents when function returns string"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if with function argument",
		"number": "02",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": {
				"!code": true,
				"javascript": "function () { return false; }",
				"php": "function() { return false; }"
			},
			"world": "world"
		},
		"expected": "cruel world!",
		"message": "if with function does not show the contents when returns false"
	},
	{
		"description": "builtin helpers - #if",
		"it": "if with function argument",
		"number": "03",
		"template": "{{#if goodbye}}GOODBYE {{/if}}cruel {{world}}!",
		"data": {
			"goodbye": {
				"!code": true,
				"javascript": "function () {return this.foo; }",
				"php": "function($scope) { return isset($scope['foo']) ? $scope['foo'] : null; }"
			},
			"world": "world"
		},
		"expected": "cruel world!",
		"message": "if with function does not show the contents when returns undefined"
	},
	{
		"description": "builtin helpers - #if",
		"it": "should not change the depth list",
		"template": "{{#with foo}}{{#if goodbye}}GOODBYE cruel {{../world}}!{{/if}}{{/with}}",
		"data": {
			"foo": {
				"goodbye": true
			},
			"world": "world"
		},
		"expected": "GOODBYE cruel world!"
	},
	{
		"description": "builtin helpers - #with",
		"it": "with",
		"template": "{{#with person}}{{first}} {{last}}{{/with}}",
		"data": {
			"person": {
				"first": "Alan",
				"last": "Johnson"
			}
		},
		"expected": "Alan Johnson"
	},
	{
		"description": "builtin helpers - #with",
		"it": "with with function argument",
		"template": "{{#with person}}{{first}} {{last}}{{/with}}",
		"data": {
			"person": {
				"!code": true,
				"javascript": "function () { return {first: 'Alan', last: 'Johnson'}; }",
				"php": "function() { return array(\"first\" => \"Alan\", \"last\" => \"Johnson\"); }"
			}
		},
		"expected": "Alan Johnson"
	},
	{
		"description": "builtin helpers - #with",
		"it": "with with else",
		"template": "{{#with person}}Person is present{{else}}Person is not present{{/with}}",
		"data": {},
		"expected": "Person is not present"
	},
	{
		"description": "builtin helpers - #with",
		"it": "with provides block parameter",
		"template": "{{#with person as |foo|}}{{foo.first}} {{last}}{{/with}}",
		"data": {
			"person": {
				"first": "Alan",
				"last": "Johnson"
			}
		},
		"expected": "Alan Johnson"
	},
	{
		"description": "builtin helpers - #with",
		"it": "works when data is disabled",
		"template": "{{#with person as |foo|}}{{foo.first}} {{last}}{{/with}}",
		"data": {
			"person": {
				"first": "Alan",
				"last": "Johnson"
			}
		},
		"expected": "Alan Johnson",
		"compileOptions": {
			"data": false
		}
	},
	{
		"description": "builtin helpers - #each",
		"it": "each",
		"template": "{{#each goodbyes}}{{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				},
				{
					"text": "GOODBYE"
				}
			],
			"world": "world"
		},
		"expected": "goodbye! Goodbye! GOODBYE! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "each with array argument iterates over the contents when not empty"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each",
		"number": "01",
		"template": "{{#each goodbyes}}{{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [],
			"world": "world"
		},
		"expected": "cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "each with array argument ignores the contents when empty"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each without data",
		"template": "{{#each goodbyes}}{{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				},
				{
					"text": "GOODBYE"
				}
			],
			"world": "world"
		},
		"expected": "goodbye! Goodbye! GOODBYE! cruel world!",
		"runtimeOptions": {
			"data": false
		},
		"compileOptions": {
			"data": false
		},
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		}
	},
	{
		"description": "builtin helpers - #each",
		"it": "each without data",
		"number": "01",
		"template": "{{#each .}}{{.}}{{/each}}",
		"data": {
			"goodbyes": "cruel",
			"world": "world"
		},
		"expected": "cruelworld",
		"runtimeOptions": {
			"data": false
		},
		"compileOptions": {
			"data": false
		},
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		}
	},
	{
		"description": "builtin helpers - #each",
		"it": "each without context",
		"template": "{{#each goodbyes}}{{text}}! {{/each}}cruel {{world}}!",
		"data": null,
		"expected": "cruel !",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		}
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with an object and @key",
		"template": "{{#each goodbyes}}{{@key}}. {{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": {},
			"world": "world"
		},
		"expected": "cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		}
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with @index",
		"template": "{{#each goodbyes}}{{@index}}. {{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				},
				{
					"text": "GOODBYE"
				}
			],
			"world": "world"
		},
		"expected": "0. goodbye! 1. Goodbye! 2. GOODBYE! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @index variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with nested @index",
		"template": "{{#each goodbyes}}{{@index}}. {{text}}! {{#each ../goodbyes}}{{@index}} {{/each}}After {{@index}} {{/each}}{{@index}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				},
				{
					"text": "GOODBYE"
				}
			],
			"world": "world"
		},
		"expected": "0. goodbye! 0 1 2 After 0 1. Goodbye! 0 1 2 After 1 2. GOODBYE! 0 1 2 After 2 cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @index variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with block params",
		"template": "{{#each goodbyes as |value index|}}{{index}}. {{value.text}}! {{#each ../goodbyes as |childValue childIndex|}} {{index}} {{childIndex}}{{/each}} After {{index}} {{/each}}{{index}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				}
			],
			"world": "world"
		},
		"expected": "0. goodbye!  0 0 0 1 After 0 1. Goodbye!  1 0 1 1 After 1 cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		}
	},
	{
		"description": "builtin helpers - #each",
		"it": "each object with @index",
		"template": "{{#each goodbyes}}{{@index}}. {{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": {
				"a": {
					"text": "goodbye"
				},
				"b": {
					"text": "Goodbye"
				},
				"c": {
					"text": "GOODBYE"
				}
			},
			"world": "world"
		},
		"expected": "0. goodbye! 1. Goodbye! 2. GOODBYE! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @index variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with @first",
		"template": "{{#each goodbyes}}{{#if @first}}{{text}}! {{/if}}{{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				},
				{
					"text": "GOODBYE"
				}
			],
			"world": "world"
		},
		"expected": "goodbye! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @first variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with nested @first",
		"template": "{{#each goodbyes}}({{#if @first}}{{text}}! {{/if}}{{#each ../goodbyes}}{{#if @first}}{{text}}!{{/if}}{{/each}}{{#if @first}} {{text}}!{{/if}}) {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				},
				{
					"text": "GOODBYE"
				}
			],
			"world": "world"
		},
		"expected": "(goodbye! goodbye! goodbye!) (goodbye!) (goodbye!) cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @first variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each object with @first",
		"template": "{{#each goodbyes}}{{#if @first}}{{text}}! {{/if}}{{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": {
				"foo": {
					"text": "goodbye"
				},
				"bar": {
					"text": "Goodbye"
				}
			},
			"world": "world"
		},
		"expected": "goodbye! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @first variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with @last",
		"template": "{{#each goodbyes}}{{#if @last}}{{text}}! {{/if}}{{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				},
				{
					"text": "GOODBYE"
				}
			],
			"world": "world"
		},
		"expected": "GOODBYE! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @last variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each object with @last",
		"template": "{{#each goodbyes}}{{#if @last}}{{text}}! {{/if}}{{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": {
				"foo": {
					"text": "goodbye"
				},
				"bar": {
					"text": "Goodbye"
				}
			},
			"world": "world"
		},
		"expected": "Goodbye! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @last variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with nested @last",
		"template": "{{#each goodbyes}}({{#if @last}}{{text}}! {{/if}}{{#each ../goodbyes}}{{#if @last}}{{text}}!{{/if}}{{/each}}{{#if @last}} {{text}}!{{/if}}) {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [
				{
					"text": "goodbye"
				},
				{
					"text": "Goodbye"
				},
				{
					"text": "GOODBYE"
				}
			],
			"world": "world"
		},
		"expected": "(GOODBYE!) (GOODBYE!) (GOODBYE! GOODBYE! GOODBYE!) cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "The @last variable is used"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with function argument",
		"template": "{{#each goodbyes}}{{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": {
				"!code": true,
				"javascript": "function () { return [{text: 'goodbye'}, {text: 'Goodbye'}, {text: 'GOODBYE'}]; }",
				"php": "function() { return array(array(\"text\" => \"goodbye\"), array(\"text\" => \"Goodbye\"), array(\"text\" => \"GOODBYE\")); }"
			},
			"world": "world"
		},
		"expected": "goodbye! Goodbye! GOODBYE! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "each with array function argument iterates over the contents when not empty"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each with function argument",
		"number": "01",
		"template": "{{#each goodbyes}}{{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": [],
			"world": "world"
		},
		"expected": "cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "each with array function argument ignores the contents when empty"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each object when last key is an empty string",
		"template": "{{#each goodbyes}}{{@index}}. {{text}}! {{/each}}cruel {{world}}!",
		"data": {
			"goodbyes": {
				"a": {
					"text": "goodbye"
				},
				"b": {
					"text": "Goodbye"
				},
				"": {
					"text": "GOODBYE"
				}
			},
			"world": "world"
		},
		"expected": "0. goodbye! 1. Goodbye! 2. GOODBYE! cruel world!",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "Empty string key is not skipped"
	},
	{
		"description": "builtin helpers - #each",
		"it": "data passed to helpers",
		"template": "{{#each letters}}{{this}}{{detectDataInsideEach}}{{/each}}",
		"data": {
			"letters": [
				"a",
				"b",
				"c"
			]
		},
		"expected": "a!b!c!",
		"runtimeOptions": {
			"data": {
				"exclaim": "!"
			}
		},
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"message": "should output data"
	},
	{
		"description": "builtin helpers - #each",
		"it": "each on implicit context",
		"template": "{{#each}}{{text}}! {{/each}}cruel world!",
		"data": {},
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		},
		"exception": "Must pass iterator to #each"
	},
	{
		"description": "builtin helpers - #lookup",
		"it": "should lookup arbitrary content",
		"template": "{{#each goodbyes}}{{lookup ../data .}}{{/each}}",
		"data": {
			"goodbyes": [
				0,
				1
			],
			"data": [
				"foo",
				"bar"
			]
		},
		"expected": "foobar",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		}
	},
	{
		"description": "builtin helpers - #lookup",
		"it": "should not fail on undefined value",
		"template": "{{#each goodbyes}}{{lookup ../bar .}}{{/each}}",
		"data": {
			"goodbyes": [
				0,
				1
			],
			"data": [
				"foo",
				"bar"
			]
		},
		"expected": "",
		"helpers": {
			"detectDataInsideEach": {
				"!code": true,
				"javascript": "function(options) { return options.data && options.data.exclaim; }",
				"php": "function($options) { return isset($options['data']['exclaim'])? $options['data']['exclaim'] : ''; }"
			}
		}
	}
]